{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Сontainer.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/Container/Container.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","getFilter","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","resetName","resetNumber","form_block","onSubmit","e","preventDefault","includeName","reduce","acc","contact","includeNumber","alert","newContact","form_title","form_input","type","value","placeholder","onChange","currentTarget","form_button","ContactList","contacts_section","contact_list","map","list_item","list_button","onClick","onDeleteContact","Filter","filter_text","filter_input","event","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9a6a7bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__2Aw3W\",\"filter_input\":\"Filter_filter_input__2XDea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Сontainer_container__2VU3P\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// ** Redux\r\n\r\n// import * as actionTypes from './types';\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: actionTypes.ADD_CONTACT,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: actionTypes.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: actionTypes.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./actions\";\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst contacts = createReducer(\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\n// ** Redux\r\n\r\n// import * as actionTypes from './types';\r\n\r\n// const contacts = (\r\n//   state = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//   ],\r\n//   { type, payload },\r\n// ) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD_CONTACT:\r\n//       return [...state, payload];\r\n//     case actionTypes.DELETE_CONTACT:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.CHANGE_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nexport const persistor = persistStore(store);\r\n\r\n// ** Redux\r\n\r\n// import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import styles from \"./Сontainer.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","export const getFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.contacts;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport { getContacts } from \"../../redux/selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const newContact = () => {\r\n    const includeName = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      []\r\n    );\r\n    const includeNumber = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      []\r\n    );\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Please fill in the fields!\");\r\n      return true;\r\n    }\r\n    if (includeName.includes(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    } else if (includeNumber.includes(number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    resetName();\r\n    resetNumber();\r\n    if (newContact()) {\r\n      return;\r\n    }\r\n    dispatch(actions.addContact(name, number));\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName(\"\");\r\n  };\r\n  const resetNumber = () => {\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form_block} onSubmit={handleSubmit}>\r\n      <label className={styles.form_title}>\r\n        Name\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleChangeName}\r\n        />\r\n      </label>\r\n      <label className={styles.form_title}>\r\n        Number\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChangeNumber}\r\n          placeholder=\"000-00-00\"\r\n        />\r\n      </label>\r\n      <button className={styles.form_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ** Redux ***\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.contacts.contacts,\r\n// });\r\n\r\n// const mapToDispatchProps = (dispatch) => ({\r\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapToDispatchProps)(ContactForm)\r\n","import styles from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport { getVisibleContacts } from \"../../redux/selectors\";\r\n// import React from \"react\";\r\n// import {connect} from 'react-redux';\r\n// import PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <div className={styles.contacts_section}>\r\n      <ul className={styles.contact_list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li className={styles.list_item} key={id}>\r\n            {`${name} : ${number}`}\r\n            {\r\n              <button\r\n                className={styles.list_button}\r\n                type=\"button\"\r\n                name=\"delete\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                delete\r\n              </button>\r\n            }\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ** Redux\r\n\r\n// const getVisibleContacts = (allContacts, filter) => {\r\n//   const normalizeFilter = filter.toLowerCase();\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizeFilter)\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n//   contacts: getVisibleContacts(contacts, filter),\r\n// });\r\n\r\n// const mapToDispatchProps = (dispatch) => ({\r\n//   onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect (mapStateToProps,mapToDispatchProps)(ContactList);\r\n","import styles from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport * as actions from \"../../redux/actions\";\r\n// import React from \"react\";\r\n// import {connect} from 'react-redux'\r\n// import PropTypes from \"prop-types\";\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) =>\r\n    dispatch(actions.changeFilter(event.target.value));\r\n  return (\r\n    <div className={styles.filter_text}>\r\n      Find contacts by name:\r\n      <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Filter;\r\n\r\n// ** Redux\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n\r\n// const mapToDispatchProps = (dispatch) => ({\r\n//   onChange: (event) => dispatch(actions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapToDispatchProps)(Filter);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_block\":\"ContactForm_form_block__3mplV\",\"form_title\":\"ContactForm_form_title__3wX9-\",\"form_input\":\"ContactForm_form_input__2Ld8o\",\"form_button\":\"ContactForm_form_button__JfgKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_section\":\"ContactList_contacts_section__3Vv72\",\"contact_list\":\"ContactList_contact_list__15cqZ\",\"list_item\":\"ContactList_list_item__oZsFS\",\"list_button\":\"ContactList_list_button__3I0Z4\"};"],"sourceRoot":""}